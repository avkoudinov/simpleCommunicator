<?php//-------------------------------------------------------------------// class JobManager//-------------------------------------------------------------------class JobManager{    //---------------------------------------------------------------    var $forum_manager;        //---------------------------------------------------------------    function clean_old_search_cache()    {        $dbw = System::getDBWorker();        if (!$dbw) {            return false;        }                $prfx = $dbw->escape(System::getDBPrefix());                $limit = $dbw->format_datetime(time() - 24 * 3600);                // delete outdated cache                if (!$dbw->execute_query("delete from {$prfx}_found_post_cache where dt <= '$limit'")) {            MessageHandler::setError(text("ErrQueryFailed"), $dbw->get_last_error() . "\n\n" . $dbw->get_last_query());            return false;        }                if (!$dbw->execute_query("delete from {$prfx}_found_topic_cache where dt <= '$limit'")) {            MessageHandler::setError(text("ErrQueryFailed"), $dbw->get_last_error() . "\n\n" . $dbw->get_last_query());            return false;        }                return true;    } // clean_old_search_cache        //---------------------------------------------------------------    function clean_tmp_directory()    {        $dir = APPLICATION_ROOT . "tmp/";        $files = scandir($dir);        if (!$files) {            return;        }                foreach ($files as $file) {            if ($file == "." || $file == ".." || $file == ".htaccess" || $file == "clean_jobs_running.sm") {                continue;            }                        $modified = filemtime($dir . "/" . $file);                        // delete all older 12 hours            if (time() - $modified < 12 * 3600) {                continue;            }                        if (file_exists($dir . "/" . $file)) {                @unlink($dir . "/" . $file);            }        }    } // clean_tmp_directory        //---------------------------------------------------------------    function clean_inactive_ignored_guests_and_topics()    {        $dbw = System::getDBWorker();        if (!$dbw) {            return false;        }                $prfx = $dbw->escape(System::getDBPrefix());                $mindate = $dbw->format_datetime(time() - 60 * 24 * 3600);                if (!$dbw->start_transaction()) {            MessageHandler::setError(text("ErrQueryFailed"), $dbw->get_last_error() . "\n\n" . $dbw->get_last_query());            return false;        }                // delete guests from the ignore list of the users,        // if they wer 1 month inactive                if (!$dbw->execute_query("delete {$prfx}_ignored_guests                                    from {$prfx}_ignored_guests                                    inner join {$prfx}_user on ({$prfx}_ignored_guests.user_id = {$prfx}_user.id)                                    left join                                      (select distinct author from {$prfx}_post where {$prfx}_post.creation_date > '$mindate') active_guests                                      on (active_guests.author = guest_name)                                    where whitelist = 0 and active_guests.author is null")        ) {            MessageHandler::setError(text("ErrQueryFailed"), $dbw->get_last_error() . "\n\n" . $dbw->get_last_query());            $dbw->rollback_transaction();                        return false;        }                if (!$dbw->execute_query("update {$prfx}_user set ignore_guests_blacklist = 0                                  where ignore_guests_blacklist = 1 and                                  not exists (select 1 from {$prfx}_ignored_guests where user_id = {$prfx}_user.id and whitelist = 0)")        ) {            MessageHandler::setError(text("ErrQueryFailed"), $dbw->get_last_error() . "\n\n" . $dbw->get_last_query());            $dbw->rollback_transaction();                        return false;        }                $mindate = $dbw->format_datetime(time() - 10 * 24 * 3600);        $query = "insert into {$prfx}_ignored_topics_archive                  (topic_id, user_id, auto_ignored)                  select                  {$prfx}_ignored_topics.topic_id, {$prfx}_ignored_topics.user_id, auto_ignored                  from {$prfx}_ignored_topics                  inner join {$prfx}_topic on ({$prfx}_ignored_topics.topic_id = {$prfx}_topic.id)                  inner join {$prfx}_topic_statistics on ({$prfx}_topic_statistics.topic_id = {$prfx}_topic.id)                  where                  last_message_date <= '$mindate' and is_private < 1                  and not exists (select 1 from {$prfx}_ignored_topics_archive where {$prfx}_ignored_topics.user_id = {$prfx}_ignored_topics_archive.user_id and {$prfx}_ignored_topics.topic_id = {$prfx}_ignored_topics_archive.topic_id)                 ";                if (!$dbw->execute_query($query)) {            MessageHandler::setError(text("ErrQueryFailed"), $dbw->get_last_error() . "\n\n" . $dbw->get_last_query());            $dbw->rollback_transaction();                        return false;        }                $query = "delete from {$prfx}_ignored_topics where                  topic_id not in                  (select topic_id                  from {$prfx}_topic_statistics                  inner join {$prfx}_topic on ({$prfx}_topic_statistics.topic_id = {$prfx}_topic.id)                  where last_message_date > '$mindate' or is_private > 0)                 ";                if (!$dbw->execute_query($query)        ) {            MessageHandler::setError(text("ErrQueryFailed"), $dbw->get_last_error() . "\n\n" . $dbw->get_last_query());            $dbw->rollback_transaction();                        return false;        }                if (!$dbw->commit_transaction()) {            MessageHandler::setError(text("ErrQueryFailed"), $dbw->get_last_error() . "\n\n" . $dbw->get_last_query());            return false;        }                return true;    } // clean_inactive_ignored_guests_and_topics        //---------------------------------------------------------------    function clean_old_statistics()    {        $dbw = System::getDBWorker();        if (!$dbw) {            return false;        }                $prfx = $dbw->escape(System::getDBPrefix());                // maximal period - one week        // we can delete the old data before        $mindate = $dbw->format_datetime(time() - 8 * 24 * 3600);                if (!$dbw->execute_query("delete from {$prfx}_load_statistics where dt < '$mindate'")) {            MessageHandler::setError(text("ErrQueryFailed"),                $dbw->get_last_error() . "\n\n" .                $dbw->get_last_query()            );            return false;        }                $mindate = $dbw->format_datetime(time() - 90 * 24 * 3600);                if (!$dbw->execute_query("delete from {$prfx}_forum_hits where dt < '$mindate'")) {            MessageHandler::setError(text("ErrQueryFailed"),                $dbw->get_last_error() . "\n\n" .                $dbw->get_last_query()            );            return false;        }                return true;    } // clean_old_statistics        //---------------------------------------------------------------    function clean_old_blocked_ips_and_users()    {        $dbw = System::getDBWorker();        if (!$dbw) {            return false;        }                $prfx = $dbw->escape(System::getDBPrefix());        $now = $dbw->format_datetime(time());                if (!$dbw->execute_query("delete from {$prfx}_ip_blocked where block_expires < '$now'")) {            MessageHandler::setError(text("ErrQueryFailed"), $dbw->get_last_error() . "\n\n" . $dbw->get_last_query());            return false;        }                if (!$dbw->execute_query("update {$prfx}_user set blocked = 0, block_expires = null                                  where block_expires <= '$now'")        ) {            MessageHandler::setError(text("ErrQueryFailed"), $dbw->get_last_error() . "\n\n" . $dbw->get_last_query());                        return false;        }                return true;    } // clean_old_blocked_ips_and_users        //---------------------------------------------------------------    function clean_old_read_markers()    {        $dbw = System::getDBWorker();        if (!$dbw) {            return false;        }                $prfx = $dbw->escape(System::getDBPrefix());                $new_tracking_period = defined('NEW_TRACKING_PERIOD') ? NEW_TRACKING_PERIOD : 30;        $mindate = $dbw->format_datetime(time() - $new_tracking_period * 24 * 3600);                if (!$dbw->start_transaction()) {            MessageHandler::setError(text("ErrQueryFailed"), $dbw->get_last_error() . "\n\n" . $dbw->get_last_query());            return false;        }                // to prevent inflation of the table:                // we track the new status only for N days.        // we delete the outdated records of the inactive visitors who are inactive for N days.        //        // the new messages of the private topics are tracked even if the private forum has never been visited.        // it is ensured by the entering the the first read date of the private forum while user registration.        // thus, we do not touch the private forum.                if (!$dbw->execute_query("delete from                             {$prfx}_forum_read_markers                             where last_activity < '$mindate'                             and not exists (select 1 from {$prfx}_forum where id = forum_id and {$prfx}_forum.name = 'PRIVATE_MESSAGES')                            ")) {            MessageHandler::setError(text("ErrQueryFailed"), $dbw->get_last_error() . "\n\n" . $dbw->get_last_query());            $dbw->rollback_transaction();                        return false;        }                if (!$dbw->execute_query("delete from                             {$prfx}_topic_read_markers                             where last_read_date < '$mindate'                             and not exists (select 1 from {$prfx}_private_topics where {$prfx}_private_topics.topic_id = {$prfx}_topic_read_markers.topic_id)                            ")) {            MessageHandler::setError(text("ErrQueryFailed"), $dbw->get_last_error() . "\n\n" . $dbw->get_last_query());            $dbw->rollback_transaction();                        return false;        }                // we update each forum FIRST_READ_DATE, to be able to delete many topic        // read markers of the corresponding forum.        // we do not touch the private forum.                if (!$dbw->execute_query("update {$prfx}_forum_read_markers                             set first_read_date = '$mindate'                             where first_read_date < '$mindate'                             and not exists (select 1 from {$prfx}_forum where id = forum_id and {$prfx}_forum.name = 'PRIVATE_MESSAGES')                            ")) {            MessageHandler::setError(text("ErrQueryFailed"), $dbw->get_last_error() . "\n\n" . $dbw->get_last_query());                        $dbw->rollback_transaction();            return false;        }                // We delete inactive read markers from the activity table only by guests.                if (!$dbw->execute_query("delete from                             {$prfx}_read_marker_activity                             where last_activity < '$mindate'                             and not exists (select 1 from {$prfx}_user where {$prfx}_user.read_marker = {$prfx}_read_marker_activity.read_marker)                            ")) {            MessageHandler::setError(text("ErrQueryFailed"), $dbw->get_last_error() . "\n\n" . $dbw->get_last_query());            $dbw->rollback_transaction();                        return false;        }                // bots produce many entries in the FORUM_READ_MARKERS        // we delete the entries where a forum was visited but no topic has been visited        // within 12 hours after visiting the forum.        //        // we do not touch the private forum and users.                $first_activity_limit = $dbw->format_datetime(time() - 24 * 3600);        $last_activity_limit = $dbw->format_datetime(time() - 12 * 3600);                if (!$dbw->execute_query("delete from                             {$prfx}_forum_read_markers                             where                             first_activity > '$first_activity_limit' and last_activity < '$last_activity_limit'                             and not exists (select 1 from {$prfx}_topic_read_markers where {$prfx}_topic_read_markers.read_marker = {$prfx}_forum_read_markers.read_marker)                             and not exists (select 1 from {$prfx}_user where {$prfx}_user.read_marker = {$prfx}_forum_read_markers.read_marker)                             and not exists (select 1 from {$prfx}_forum where id = forum_id and {$prfx}_forum.name = 'PRIVATE_MESSAGES')                            ")) {            MessageHandler::setError(text("ErrQueryFailed"), $dbw->get_last_error() . "\n\n" . $dbw->get_last_query());            $dbw->rollback_transaction();                        return false;        }                if (!$dbw->execute_query("delete from                             {$prfx}_read_marker_activity                             where                             first_activity > '$first_activity_limit' and last_activity < '$last_activity_limit'                             and not exists (select 1 from {$prfx}_topic_read_markers where {$prfx}_topic_read_markers.read_marker = {$prfx}_read_marker_activity.read_marker)                             and not exists (select 1 from {$prfx}_user where {$prfx}_user.read_marker = {$prfx}_read_marker_activity.read_marker)                            ")) {            MessageHandler::setError(text("ErrQueryFailed"), $dbw->get_last_error() . "\n\n" . $dbw->get_last_query());            $dbw->rollback_transaction();                        return false;        }                if (!$dbw->commit_transaction()) {            MessageHandler::setError(text("ErrQueryFailed"), $dbw->get_last_error() . "\n\n" . $dbw->get_last_query());            return false;        }                return true;    } // clean_old_read_markers        //---------------------------------------------------------------    function clean_old_autosaved_messages()    {        $dbw = System::getDBWorker();        if (!$dbw) {            return false;        }                $prfx = $dbw->escape(System::getDBPrefix());                $limit = $dbw->format_datetime(time() - 24 * 3600);                // delete outdated entries                $query = "delete from {$prfx}_auto_saved where dt < '$limit'";                if (!$dbw->execute_query($query)) {            MessageHandler::setError(text("ErrQueryFailed"), $dbw->get_last_error() . "\n\n" . $dbw->get_last_query());            return false;        }                return true;    } // clean_old_autosaved_messages        //---------------------------------------------------------------    function clean_old_topic_views()    {        $dbw = System::getDBWorker();        if (!$dbw) {            return false;        }                $prfx = $dbw->escape(System::getDBPrefix());                $unique_uids = array();                if (!$dbw->execute_query($this->forum_manager->get_query_clear_viewed_topics($prfx))) {            MessageHandler::setError(text("ErrQueryFailed"), $dbw->get_last_error() . "\n\n" . $dbw->get_last_query());            return false;        }                while ($dbw->fetch_row()) {            $unique_uids[$dbw->field_by_name("user_id")] = xstrtotime($dbw->field_by_name("min_dt"));        }                $dbw->free_result();                $unique_guests = array();                if (!$dbw->execute_query($this->forum_manager->get_query_clear_guest_viewed_topics($prfx))) {            MessageHandler::setError(text("ErrQueryFailed"), $dbw->get_last_error() . "\n\n" . $dbw->get_last_query());            return false;        }                while ($dbw->fetch_row()) {            $unique_guests[$dbw->field_by_name("guest_name")] = xstrtotime($dbw->field_by_name("min_dt"));        }                $dbw->free_result();                foreach ($unique_uids as $uid => $dt) {            $uid = $dbw->escape($uid);            $dt = $dbw->format_datetime($dt);                        $query = "delete from {$prfx}_topic_view_history where dt < '$dt' and user_id = $uid";                        if (!$dbw->execute_query($query)) {                MessageHandler::setError(text("ErrQueryFailed"), $dbw->get_last_error() . "\n\n" . $dbw->get_last_query());                return false;            }        }                foreach ($unique_guests as $guest_name => $dt) {            $guest_name = $dbw->escape($guest_name);            $dt = $dbw->format_datetime($dt);                        $query = "delete from {$prfx}_topic_view_history where dt < '$dt' and guest_name = '$guest_name'";                        if (!$dbw->execute_query($query)) {                MessageHandler::setError(text("ErrQueryFailed"), $dbw->get_last_error() . "\n\n" . $dbw->get_last_query());                return false;            }        }                return true;    } // clean_old_topic_views    //---------------------------------------------------------------} // JobManager//-------------------------------------------------------------------?>
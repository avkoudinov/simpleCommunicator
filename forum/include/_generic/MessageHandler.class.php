<?php//-------------------------------------------------------------------// class MessageHandler//-------------------------------------------------------------------class MessageHandler{    //-----------------------------------------------------------------    static function makeMessage(&$messages, $separator)    {        $cnt = 0;        if (empty($messages) || ($cnt = count($messages)) == 0) {            return "";        }                $message = "";                $counter = 0;        foreach ($messages as $current) {            // we do not numerate because some messages            // can be also added per JavaScript on the client            //if($cnt > 1) $message .= ++$counter . ". ";                        $message .= trim($current["message"]) . $separator;                        if (((defined('SHOW_MESSAGE_DETAILS') && SHOW_MESSAGE_DETAILS) ||                    (defined('MAINTENANCE') && MAINTENANCE)                ) && !empty($current["details"])) {                $message .= trim($current["details"]) . $separator;            }        } // foreach                // unset messages because they has been shown        $messages = null;                return $message;    } // makeMessage        //-----------------------------------------------------------------    static function setFocusElement($element)    {        $_SESSION["focus_element"] = $element;    } // setFocusElement        //-----------------------------------------------------------------    static function getFocusElement()    {        if (empty($_SESSION["focus_element"])) {            return "";        }                $felm = $_SESSION["focus_element"];                unset($_SESSION["focus_element"]);                return $felm;    } // getFocusElement        //-----------------------------------------------------------------    static function setActiveTab($tab)    {        $_SESSION["active_tab"] = $tab;    } // setActiveTab        //-----------------------------------------------------------------    static function getActiveTab()    {        if (empty($_SESSION["active_tab"])) {            return "";        }                $atab = $_SESSION["active_tab"];                unset($_SESSION["active_tab"]);                return $atab;    } // getActiveTab        //-----------------------------------------------------------------    static function setErrorElement($element)    {        $_SESSION["focus_element"] = $element;        $_SESSION["error_element"] = $element;    } // setErrorElement        //-----------------------------------------------------------------    static function getErrorElement()    {        if (empty($_SESSION["error_element"])) {            return "";        }                $felm = $_SESSION["error_element"];                unset($_SESSION["error_element"]);                return $felm;    } // getErrorElement        //-----------------------------------------------------------------    static function setError($message, $details = "")    {        if (empty($message)) {            return;        }                // we keep messages in the session        // until we are sure they are shown        // otherwise some messages may be lost        // because of redirection        $_SESSION["errors"][$message] = array(            "message" => $message,            "details" => $details        );    } // setError        //-----------------------------------------------------------------    static function unsetError($message)    {        if (empty($message)) {            return;        }                unset($_SESSION["errors"][$message]);    }        //-----------------------------------------------------------------    static function clearErrors()    {        unset($_SESSION["errors"]);    } // clearErrors        //-----------------------------------------------------------------    static function errorsExist()    {        return (isset($_SESSION["errors"]) && count($_SESSION["errors"]) > 0);    } // errorsExist        //-----------------------------------------------------------------    static function getErrors($separator = "\n\n")    {        // we keep messages in the session        // until we are sure they are shown (calling get... means they are being shown)        // otherwise some messages may be lost        // because of redirection        if (!self::errorsExist()) {            return "";        }                return self::makeMessage($_SESSION["errors"], $separator);    } // getErrors    //-----------------------------------------------------------------        //-----------------------------------------------------------------    static function setWarning($message, $details = "")    {        if (empty($message)) {            return;        }                // we keep messages in the session        // until we are sure they are shown        // otherwise some messages may be lost        // because of redirection        $_SESSION["warnings"][$message] = array(            "message" => $message,            "details" => $details        );    } // setWarning        //-----------------------------------------------------------------    static function unsetWarning($message)    {        if (empty($message)) {            return;        }                unset($_SESSION["warnings"][$message]);    }        //-----------------------------------------------------------------    static function clearWarnings()    {        unset($_SESSION["warnings"]);    } // clearWarnings        //-----------------------------------------------------------------    static function warningsExist()    {        return (isset($_SESSION["warnings"]) && count($_SESSION["warnings"]) > 0);    } // warningsExist        //-----------------------------------------------------------------    static function getWarnings($separator = "\n\n")    {        // we keep messages in the session        // until we are sure they are shown (calling get... means they are being shown)        // otherwise some messages may be lost        // because of redirection        if (!self::warningsExist()) {            return "";        }                return self::makeMessage($_SESSION["warnings"], $separator);    } // getWarnings    //-----------------------------------------------------------------        //-----------------------------------------------------------------    static function setProgWarning($message, $details = "")    {        if (empty($message) || !self::progWarningsActive()) {            return;        }                // we keep messages in the session        // until we are sure they are shown        // otherwise some messages may be lost        // because of redirection        $_SESSION["prog_warnings"][$message] = array(            "message" => $message,            "details" => $details        );    } // setProgWarning        //-----------------------------------------------------------------    static function clearProgWarnings()    {        unset($_SESSION["prog_warnings"]);    } // clearProgWarnings        //-----------------------------------------------------------------    static function progWarningsExist()    {        return (isset($_SESSION["prog_warnings"]) && count($_SESSION["prog_warnings"]) > 0);    } // progWarningsExist        //-----------------------------------------------------------------    static function getProgWarnings($separator = "\n\n")    {        // we keep messages in the session        // until we are sure they are shown (calling get... means they are being shown)        // otherwise some messages may be lost        // because of redirection        if (!self::progWarningsExist()) {            return "";        }                return self::makeMessage($_SESSION["prog_warnings"], $separator);    } // getProgWarnings    //-----------------------------------------------------------------        //-----------------------------------------------------------------    static function setDebugMessage($message, $details = "")    {        if (empty($message)) {            return;        }                // we keep messages in the session        // until we are sure they are shown        // otherwise some messages may be lost        // because of redirection        $_SESSION["debug"][$message] = array(            "message" => $message,            "details" => $details        );    } // setDebugMessage        //-----------------------------------------------------------------    static function clearDebugMessages()    {        unset($_SESSION["debug"]);    } // clearDebugMessages        //-----------------------------------------------------------------    static function debugMessageExists()    {        return (isset($_SESSION["debug"]) && count($_SESSION["debug"]) > 0);    } // debugMessageExists        //-----------------------------------------------------------------    static function getDebugMessages($separator = "\n\n")    {        // we keep messages in the session        // until we are sure they are shown (calling get... means they are being shown)        // otherwise some messages may be lost        // because of redirection        if (!self::debugMessageExists()) {            return "";        }                return self::makeMessage($_SESSION["debug"], $separator);    } // getDebugMessages    //-----------------------------------------------------------------        //-----------------------------------------------------------------    static function setInfo($message, $details = "", $auto_hide = true)    {        // if at least one info message does not want the auto hide,        // we ignore all other auto_hide = true and let it by false        if (!isset($_SESSION["auto_hide_info"]) || $_SESSION["auto_hide_info"] == true) {            $_SESSION["auto_hide_info"] = $auto_hide;        }                if (empty($message)) {            return;        }                // we keep messages in the session        // until we are sure they are shown        // otherwise some messages may be lost        // because of redirection        $_SESSION["infos"][$message] = array(            "message" => $message,            "details" => $details        );    } // setInfo        //-----------------------------------------------------------------    static function clearInfos()    {        unset($_SESSION["infos"]);        unset($_SESSION["auto_hide_info"]);    } // clearInfos        //-----------------------------------------------------------------    static function infosExist()    {        return (isset($_SESSION["infos"]) && count($_SESSION["infos"]) > 0);    } // infosExist        //-----------------------------------------------------------------    static function autoHideInfo()    {        $ahide = !empty($_SESSION["auto_hide_info"]);                unset($_SESSION["auto_hide_info"]);                return $ahide;    } // autoHideInfo        //-----------------------------------------------------------------    static function getInfos($separator = "\n\n")    {        // we keep messages in the session        // until we are sure they are shown (calling get... means they are being shown)        // otherwise some messages may be lost        // because of redirection        if (!self::infosExist()) {            return "";        }                return self::makeMessage($_SESSION["infos"], $separator);    } // getInfos    //-----------------------------------------------------------------        //-----------------------------------------------------------------    static function clearAll()    {        self::clearErrors();        self::clearWarnings();        self::clearProgWarnings();        self::clearDebugMessages();        self::clearInfos();                unset($_SESSION["focus_element"]);        unset($_SESSION["error_element"]);        unset($_SESSION["active_tab"]);    } // clearAll        //-----------------------------------------------------------------    static function addMessagesToResponse(&$response)    {        if (self::infosExist()) {            $response["INFO_MESSAGE"] = self::getInfos();        }                if (self::warningsExist()) {            $response["WARNING_MESSAGE"] = self::getWarnings();        }                if (self::errorsExist()) {            $response["ERROR_MESSAGE"] = self::getErrors();        }                if (defined('SHOW_PROGRAM_WARNINGS') && SHOW_PROGRAM_WARNINGS && self::progWarningsExist()) {            $response["PROG_WARNING"] = self::getProgWarnings();        }                if (self::debugMessageExists()) {            $response["DEBUG_MESSAGE"] = self::getDebugMessages();        }                $response["AUTO_HIDE_INFO"] = self::autoHideInfo();                $response["FOCUS_ELEMENT"] = self::getFocusElement();                $response["ACTIVE_TAB"] = self::getActiveTab();                $response["ERROR_ELEMENT"] = self::getErrorElement();    } // addMessagesToResponse        //-----------------------------------------------------------------    static function progWarningsActive()    {        return empty($GLOBALS["prog_warnings_off"]);    } // progWarningsActive        //-----------------------------------------------------------------    static function enableProgWarnings()    {        $GLOBALS["prog_warnings_off"] = false;    } // enableProgWarnings        //-----------------------------------------------------------------    static function disableProgWarnings()    {        $GLOBALS["prog_warnings_off"] = true;    } // disableProgWarnings    //-----------------------------------------------------------------} // MessageHandler//-------------------------------------------------------------------?>
<?php//-------------------------------------------------------------------// class EmailManager//-------------------------------------------------------------------class EmailManager{    //---------------------------------------------------------------    var $forum_manager;        //---------------------------------------------------------------    function check_email_domain($domain)    {        if (empty($domain)) {            return false;        }                if (!check_email_domain_service($domain)) {            return false;        }                if (!file_exists(APPLICATION_ROOT . "user_data/config/email_black_list.txt")) {            return true;        }                $email_black_list = file_get_contents(APPLICATION_ROOT . "user_data/config/email_black_list.txt");                $email_black_list = preg_split("/[\n\r]+/", $email_black_list, -1, PREG_SPLIT_NO_EMPTY);                if (in_array($domain, $email_black_list)) {            return false;        }                return true;    } // check_email_domain        //---------------------------------------------------------------    function send_email($sender, $receiver, $template, $params, $lang = "")    {        global $settings;        if ($receiver == "demoadmin") {            return true;        }                if (empty($lang)) {            $lang = current_language();        }                if (!file_exists(APPLICATION_ROOT . "lang/" . $lang . "/emails/" . $template)) {            MessageHandler::setProgWarning(sprintf(text("ErrFileDoesNotExists"), "lang/" . $lang . "/emails/" . $template));            return false;        }                $contents = trim(file_get_contents(APPLICATION_ROOT . "lang/" . $lang . "/emails/" . $template));        if (empty($contents)) {            MessageHandler::setProgWarning(sprintf(text("ErrEmailTemplateInvalid"), "lang/" . $lang . "/emails/" . $template));            return false;        }                if (!preg_match("/[\r\n]*([^\r\n]+?)[\r\n]+(.+)/sm", $contents, $matches)) {            MessageHandler::setProgWarning(sprintf(text("ErrEmailTemplateInvalid"), "lang/" . $lang . "/emails/" . $template));            return false;        }                $subject = trim($matches[1]);        $body = trim($matches[2]);                if (empty($subject) || empty($body)) {            MessageHandler::setProgWarning(sprintf(text("ErrEmailTemplateInvalid"), "lang/" . $lang . "/emails/install" . $template));            return false;        }                $params["{date}"] = adjust_and_format_timezone(time(), text("DateFormat", $lang));        $params["{time}"] = adjust_and_format_timezone(time(), text("DateTimeFormat", $lang));        $params["{ip}"] = val_or_empty($_SERVER["REMOTE_ADDR"]);                $params["{site_name}"] = get_site_name($lang);        $params["{site_url}"] = get_host_address() . get_url_path();                debug_message($settings);        debug_message("whois_server: " . $settings["whois_server"]);        debug_message("REMOTE_ADDR: " . $_SERVER["REMOTE_ADDR"]);                $params["{ip_link}"] = "";        if(!empty($settings["whois_server"]) && !empty($_SERVER["REMOTE_ADDR"]))        {          $params["{ip_link}"] = str_ireplace("{ip}", $_SERVER["REMOTE_ADDR"], $settings["whois_server"]);        }        debug_message("ip_link: " . $params["{ip_link}"]);                if (empty($params["{comment}"])) {            $params["{comment}"] = text("NotSpecified", $lang);        }                if (!empty($params["{forum_name}"]) && $params["{forum_name}"] == "PRIVATE_MESSAGES") {            $params["{forum_name}"] = text("PrivateTopics", $lang);        }                $user_name_params = array("{user_name}", "{notifier}", "{violator}", "{moderator_name}", "{administrator_name}");        foreach ($user_name_params as $param) {            if (val_or_empty($params[$param]) == "admin") {                $params[$param] = text("MasterAdministrator", $lang);            }        }                $user_name = val_or_empty($params["{user_name}"]);        if (empty($user_name)) {            $user_name = text("Member", $lang);        }        foreach ($params as &$param) {            $param = str_ireplace("#user_name#", $user_name, $param ?? "");        }                if (count($params) > 0) {            $subject = str_ireplace(array_keys($params), $params, $subject);            $body = str_ireplace(array_keys($params), $params, $body);        }                $rn = "\n";                $headers = "";        $headers .= "MIME-Version: 1.0{$rn}";        $headers .= "From: $sender{$rn}";        //$headers .= "To: $receiver{$rn}";                $headers .= "Content-Type: text/plain; charset=\"utf-8\"{$rn}";        $headers .= "Content-Disposition: inline{$rn}";                $subject_encoded = "=?utf-8?B?" . base64_encode($subject) . "?=";                if (defined('MAIL_TO_TRACE') && MAIL_TO_TRACE) {            trace_message_to_file($headers, "email_trace.log");            trace_message_to_file("Receiver: " . $receiver, "email_trace.log");            trace_message_to_file("--------", "email_trace.log");            trace_message_to_file($subject, "email_trace.log");            trace_message_to_file("--------", "email_trace.log");            trace_message_to_file($body, "email_trace.log");            trace_message_to_file("------------------------------", "email_trace.log");            return true;        }                $err = send_mail($receiver, $subject_encoded, $body, $headers);                if (!empty($err)) {            MessageHandler::setProgWarning(text("ErrMailFailed"), $err);                        trace_message_to_file(date("d.m.Y, H:i"), "mailing_errors.log");            trace_message_to_file("Mailing failed: " . $receiver, "mailing_errors.log");            trace_message_to_file("", "mailing_errors.log");            trace_message_to_file($err, "mailing_errors.log");            trace_message_to_file("------------------------------------------", "mailing_errors.log");                        return false;        }                return true;    } // send_email        //---------------------------------------------------------------    function send_contact_message()    {        global $settings;                $dbw = System::getDBWorker();        if (!$dbw) {            return false;        }                $prfx = $dbw->escape(System::getDBPrefix());        if (reqvar_empty("email", true)) {            MessageHandler::setError(text("ErrSenderEmailEmpty"));            MessageHandler::setErrorElement("email");            return false;        }                if (utf8_strlen(reqvar("email")) > 100) {            MessageHandler::setError(sprintf(text("ErrEmailTooLong"), 100));            MessageHandler::setErrorElement("email");            return false;        }                if (reqvar_empty("subject", true)) {            MessageHandler::setError(text("ErrSubjectEmpty"));            MessageHandler::setErrorElement("subject");            return false;        }                if (utf8_strlen(reqvar("subject")) > 100) {            MessageHandler::setError(sprintf(text("ErrSubjectTooLong"), 100));            MessageHandler::setErrorElement("subject");            return false;        }                if (reqvar_empty("message", true)) {            MessageHandler::setError(text("ErrMessageEmpty"));            MessageHandler::setErrorElement("message");            return false;        }                if (empty($settings["receiver"])) {            MessageHandler::setInfo(text("MsgMessageSent"));            return true;        }                if (reqvar_empty("rules_agreemnt")) {            MessageHandler::setError(text("ErrAgreementRequired"));            MessageHandler::setErrorElement("rules_agreemnt");            return false;        }                if (!$this->forum_manager->verify_captcha(true)) {            return false;        }                $_SESSION["sender_email"] = reqvar("email");                $params = array();                $params["{email}"] = reqvar("email");        $params["{subject}"] = reqvar("subject");        $params["{message}"] = reqvar("message");        $params["{user_marker}"] = reqvar("user_marker");        $params["{site_url}"] = get_host_address() . get_url_path();                $lng = defined('DEFAULT_LANGUAGE') ? DEFAULT_LANGUAGE : "en";                $this->forum_manager->format_manager->format_email_message($dbw, $prfx, $params["{message}"], $lng, get_host_address() . get_url_path());                $this->send_email(reqvar("email"), $settings["receiver"], "email_contact.txt", $params, $lng);                MessageHandler::setInfo(text("MsgMessageSent"));                return true;    } // send_contact_message    //---------------------------------------------------------------} // EmailManager//-------------------------------------------------------------------?>